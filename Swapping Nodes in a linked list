class Solution:
    def swapNodes(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        i = 1
        temp = head
        while i<k:
            temp = temp.next
            i+=1
        count = 0
        temp2 = head
        while temp2 !=None:
            temp2 = temp2.next
            count+=1
        lastKthNode = count-k
        i = 0
        temp2 = head
        while i<lastKthNode:
            temp2 = temp2.next
            i=i+1
        temp2.val,temp.val = temp.val,temp2.val
        return head
        ----------------------------------------------------------------------
class Solution:
    def swapNodes(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
         i = 1
         temp = head
         while i<k:
            temp = temp.next
            i+=1
        first = temp
        temp2 = head
        while temp.next !=None:
            temp =temp.next
            temp2 = temp2.next
       first.val,temp.val = temp2.val,first.val
       return head
